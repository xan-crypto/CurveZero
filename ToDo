Complete these next
Integrate with L2 money market protocol to earn yield on collateral
Alternatively use staked liquid ETH as collateral provided liquid market vs USDC on L2
Switch from ETH as collateral to multi collateral but not the long tail (ETH BTC)
Get estimate of the cost of the distribute function from Starkware
Write the python client for loan liquidation

Done
PP data need to include the end date signatures (frontend queries 1month loan, then submits 3yr) 
Switch from compound interest to simple interest
Ensure that LPs get continuous accrual of interest
Ensure that the LP tokens created are ERC20 standard and transferable per GSR
PP sign message needs to be colidated else piece wise attack via front end (need to hash unique loan id + end ts + rate return sign r/s ... PP data now [ sign sign rate pub ])
Check PP data for injection attack
Check GT LL contracts next for consistency
PP should be locked for 7 days post a pricing requestion submission
Add and check the parallel shift yield boost to LPs to balance supply and demand
Add CB repay by liquidating if CB can not repay USDC and wants to end loan now

Work Streams
Core Stream [Funding Gate , Main Use Case - User interviews, Legal setup]
Cairo Stream (Xan)
Design + Frontend Stream (Alena + Yair)
Services Stream (Xan)
Audit Stream (1x on testnet)
Community Stream (1x BD)